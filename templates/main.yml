---
AWSTemplateFormatVersion: "2010-09-09"

Description:
  This is the parent stack template for my-ha-architecture

Parameters:
  TemplatesBucket:
    Type: String
    Description: "This is the URL for the S3 bucket where the my-ha-architecture templates are stored."
  EnvironmentName:
    Type: String
    Default: dev
    AllowedValues: ["prod", "dev"]
    Description: "Sets the environment."
    ConstraintDescription: "must specify prod or dev."
  ProjectName:
    Type: String
    Description: "Projcet Name."
    ConstraintDescription: "must specified."
  MyPublicIp:
    Type: String
    Default: "0.0.0.0/0"
    Description: "My public ip to ssh to bastion host. CIDR notation" 
  CreateComputeValue: 
    Type: String
    Default: true
    Description: "Condition to prevent stacks from being created"
  CreateManagementValue: 
    Type: String
    Default: true
    Description: "Condition to prevent stacks from being created"
  SslCertificateArn:
    Description: "ssl certificate"
    Type: String
    Default: "arn:aws:acm:eu-west-1:358441290192:certificate/1ed7c29c-e690-4ea0-9163-63d7267d4802"

Conditions:
  CreateCompute: !Equals [ !Ref CreateComputeValue, true ]
  CreateManagement: !Equals [ !Ref CreateManagementValue, true ]

Resources:
  NetworkStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Tags:
        - 
          Key: project
          Value: !Ref ProjectName
        -
          Key: environment
          Value: !Ref EnvironmentName
      Parameters:
        Environment: !Ref EnvironmentName
      TemplateURL: !Join [ /, [ "https://s3.amazonaws.com", !Ref TemplatesBucket, "network.yml" ] ]
  SecurityStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Tags:
        - 
          Key: project
          Value: !Ref ProjectName
        -
          Key: environment
          Value: !Ref EnvironmentName
      Parameters:
        Environment: !Ref EnvironmentName
      TemplateURL: !Join [ /, [ "https://s3.amazonaws.com", !Ref TemplatesBucket, "security.yml" ] ]
  ComputeStack:
    DependsOn: NetworkStack
    Condition: CreateCompute
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Tags:
        - 
          Key: project
          Value: !Ref ProjectName
        -
          Key: environment
          Value: !Ref EnvironmentName
        -
          Key: auto-delete
          Value: never
      Parameters:
        Environment: !Ref EnvironmentName
        VpcId: !GetAtt NetworkStack.Outputs.VpcHA
        PublicSubnet101Id: !GetAtt NetworkStack.Outputs.PublicSubnet101
        PublicSubnet102Id: !GetAtt NetworkStack.Outputs.PublicSubnet102
        PublicSubnet103Id: !GetAtt NetworkStack.Outputs.PublicSubnet103
        PrivateSubnet1Id: !GetAtt NetworkStack.Outputs.PrivateSubnet1
        PrivateSubnet2Id: !GetAtt NetworkStack.Outputs.PrivateSubnet2        
        PrivateSubnet3Id: !GetAtt NetworkStack.Outputs.PrivateSubnet3
        EcsServiceRole: !GetAtt SecurityStack.Outputs.EcsServiceRole
        EcsTaskRole: !GetAtt SecurityStack.Outputs.EcsTaskRole
        Ec2InstanceProfile: !GetAtt SecurityStack.Outputs.Ec2InstanceProfile
        BastionFleetSecurityGroup: !GetAtt ManagementStack.Outputs.BastionFleetSecurityGroup
        SslCertificateArn: !Ref SslCertificateArn
        HostedZone: !ImportValue PUBLIC-DNS-HOSTED-ZONE
        BaseDnsName: !ImportValue HOSTED-ZONE-NAME
      TemplateURL: !Join [ /, [ "https://s3.amazonaws.com", !Ref TemplatesBucket, "compute.yml" ] ]
  ManagementStack:
    DependsOn: NetworkStack
    Condition: CreateManagement
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Tags:
        - 
          Key: project
          Value: !Ref ProjectName
        -
          Key: environment
          Value: !Ref EnvironmentName
      Parameters:
        Environment: !Ref EnvironmentName
        VpcId: !GetAtt NetworkStack.Outputs.VpcHA
        PublicSubnet101Id: !GetAtt NetworkStack.Outputs.PublicSubnet101
        PublicSubnet102Id: !GetAtt NetworkStack.Outputs.PublicSubnet102
        PublicSubnet103Id: !GetAtt NetworkStack.Outputs.PublicSubnet103
        BastionInstanceProfile: !GetAtt SecurityStack.Outputs.BastionInstanceProfile
        MyPublicIp: !Ref MyPublicIp
      TemplateURL: !Join [ /, [ "https://s3.amazonaws.com", !Ref TemplatesBucket, "management.yml" ] ]

Outputs:
  NetworkStack:
    Description: ARN of network nested Stack
    Value: !Ref NetworkStack
    Export:
      Name: NETWORK-STACK-ID
  ComputeStack:
    Description: ARN of compute nested Stack
    Value: !If [ CreateCompute, !Ref ComputeStack, "not created"]
    Export:
      Name: COMPUTE-STACK-ID
  SecurityStack:
    Description: ARN of security nested Stack
    Value: !Ref SecurityStack
    Export:
      Name: SECURITY-STACK-ID
  ManagementStack:
    Description: ARN of management nested Stack
    Value: !Ref ManagementStack
    Export: 
      Name: MANAGEMENT-STACK