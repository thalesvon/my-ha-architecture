---
AWSTemplateFormatVersion: "2010-09-09"

Description: "This is the network stack template for my-ha-architecture. Resource defined on this template:
VPC, Subnets, Route tables, Internet Gateway, Nat Gateways."

Parameters:
  Environment:
    Type: String
    AllowedValues: ["prod", "dev"]
    Description: "Sets the environment."
    ConstraintDescription: "must specify prod or dev."

Mappings: 
  AddressConfig:
    Vpc:
      CIDR: "10.0.0.0/16"
    PublicSubnet101CIDR:
      CIDR: "10.0.101.0/24"
    PublicSubnet102CIDR:
      CIDR: "10.0.102.0/24"
    PublicSubnet103CIDR:
      CIDR: "10.0.103.0/24"
    PrivateSubnet1CIDR:
      CIDR: "10.0.1.0/24"
    PrivateSubnet2CIDR:
      CIDR: "10.0.2.0/24"
    PrivateSubnet3CIDR:
      CIDR: "10.0.3.0/24"
  AZRegionMap:
    eu-west-1:
      AZs: [eu-west-1a,eu-west-1b,eu-west-1c]

Resources:
  VpcHA:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !FindInMap [ AddressConfig, Vpc, CIDR]
      Tags:
        -
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, vpc]]
  PublicSubnet101:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !FindInMap [ AZRegionMap, !Ref 'AWS::Region', AZs ]]
      VpcId: !Ref VpcHA
      CidrBlock: !FindInMap [AddressConfig, PublicSubnet101CIDR, CIDR]
      MapPublicIpOnLaunch: true
      Tags:
        - 
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, pub-subnet-101]]
  PublicSubnet102:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !FindInMap [ AZRegionMap, !Ref 'AWS::Region', AZs ]]
      VpcId: !Ref VpcHA
      CidrBlock: !FindInMap [AddressConfig, PublicSubnet102CIDR, CIDR]
      MapPublicIpOnLaunch: true
      Tags:
        - 
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, pub-subnet-102]]
  PublicSubnet103:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 2, !FindInMap [ AZRegionMap, !Ref 'AWS::Region', AZs ]]
      VpcId: !Ref VpcHA
      CidrBlock: !FindInMap [AddressConfig, PublicSubnet103CIDR, CIDR]
      MapPublicIpOnLaunch: true
      Tags:
        - 
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, pub-subnet-103]]
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !FindInMap [ AZRegionMap, !Ref 'AWS::Region', AZs ]]
      VpcId: !Ref VpcHA
      CidrBlock: !FindInMap [AddressConfig, PrivateSubnet1CIDR, CIDR]
      MapPublicIpOnLaunch: false
      Tags:
        - 
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, pvt-subnet-1]]
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !FindInMap [ AZRegionMap, !Ref 'AWS::Region', AZs ]]
      VpcId: !Ref VpcHA
      CidrBlock: !FindInMap [AddressConfig, PrivateSubnet2CIDR, CIDR]
      MapPublicIpOnLaunch: false
      Tags:
        - 
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, pvt-subnet-2]]
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 2, !FindInMap [ AZRegionMap, !Ref 'AWS::Region', AZs ]]
      VpcId: !Ref VpcHA
      CidrBlock: !FindInMap [AddressConfig, PrivateSubnet3CIDR, CIDR]
      MapPublicIpOnLaunch: false
      Tags:
        - 
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, pvt-subnet-3]]
  Igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        -
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, igw]]
  IgwToVpcAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VpcHA
      InternetGatewayId: !Ref Igw
  PublicRoute:
    DependsOn: IgwToVpcAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcHA
      Tags:
        -
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, rt-public]]
  PublicSubnet101RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet101
  PublicSubnet102RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet102
  PublicSubnet103RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet103
  NatGW1:
    DependsOn: EIP1
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt EIP1.AllocationId
        SubnetId: !Ref PublicSubnet101
        Tags:
        -
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, nat-gw-sub-1]]
  EIP1:
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
        Tags:
          -
            Key: Name
            Value: !Join [ "-" ,[ !Ref Environment, eip-nat-gw-sub-1]]
  Route1:
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref RouteTable1
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGW1
  RouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcHA
      Tags:
        -
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, rt-sub-1]]
  PrivateSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable1
      SubnetId: !Ref PrivateSubnet1
  NatGW2:
    DependsOn: EIP2
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt EIP2.AllocationId
        SubnetId: !Ref PublicSubnet102
        Tags:
        -
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, nat-gw-sub-2]]
  EIP2:
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
        Tags:
          -
            Key: Name
            Value: !Join [ "-" ,[ !Ref Environment, eip-nat-gw-sub-2]]
  Route2:
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref RouteTable2
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGW2
  RouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcHA
      Tags:
        -
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, rt-sub-2]]
  PrivateSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable2
      SubnetId: !Ref PrivateSubnet2
  NatGW3:
    DependsOn: EIP3
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt EIP3.AllocationId
        SubnetId: !Ref PublicSubnet103
        Tags:
        -
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, nat-gw-sub-3]]
  EIP3:
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
        Tags:
          -
            Key: Name
            Value: !Join [ "-" ,[ !Ref Environment, eip-nat-gw-sub-3]]
  Route3:
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref RouteTable3
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGW3
  RouteTable3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcHA
      Tags:
        -
          Key: Name
          Value: !Join [ "-" ,[ !Ref Environment, rt-sub-3]]
  PrivateSubnet3RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable3
      SubnetId: !Ref PrivateSubnet3
  
Outputs:
  NetworkStack:
    Description: Created Network Stack
    Value: !Sub "${AWS::StackName}"
    Export:
      Name: NetworkStack
  VpcHA:
    Description: Created VPC id
    Value: !Ref VpcHA
    Export:
      Name: VPC-ID
  PublicSubnet101:
    Description: Public subnet 101
    Value: !Ref PublicSubnet101
    Export:
      Name: PUB-SUB-101-ID
  PublicSubnet102:
    Description: Public subnet 102
    Value: !Ref PublicSubnet102
    Export:
      Name: PUB-SUB-102-ID
  PublicSubnet103:
    Description: Public subnet 103
    Value: !Ref PublicSubnet103
    Export:
      Name: PUB-SUB-103-ID
  PrivateSubnet1:
    Description: Private subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: PVT-SUB-1-ID
  PrivateSubnet2:
    Description: Private subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: PVT-SUB-2-ID
  PrivateSubnet3:
    Description: Private subnet 3
    Value: !Ref PrivateSubnet3
    Export:
      Name: PVT-SUB-3-ID
  Igw:
    Description: Internet Gateway
    Value: !Ref Igw
    Export:
      Name: IGW
  NatGW1:
    Description: Nat Gateway
    Value: !Ref NatGW1
    Export:
      Name: NAT-GW1
  NatGW2:
    Description: Nat Gateway
    Value: !Ref NatGW2
    Export:
      Name: NAT-GW2
  NatGW3:
    Description: Nat Gateway
    Value: !Ref NatGW3
    Export:
      Name: NAT-GW3